###################################################################
##      Stock ESPHome ESP32-s3-box3 config - Voice assistant     ##
##       I have tweaked the stock yaml to allow you to compile   ##
##     and install using your preffered method HA Add-on is      ## 
##                   a good option to start with                 ##
###################################################################
## You can change the friendly name if you wish on line 13 below. The friendly name is how the device will show in HA 
## However the <name:> is how HA connects to the device eg. esp32-s3-box-3.local is the mDNS name for the device.
## Once added to HA changing the device name can lead to connection issues, between HA and the device.

substitutions:
  name: esp32-s3-box-3
  friendly_name: ESP32 S3 Box 3
  
####################################################################
#### change the micro wake word to be used on the line below   #####
####      options are okay_nabu, hey_jarvis, alexa             #####
####################################################################
  micro_wake_word_model: okay_nabu
####################################################################
esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  platformio_options:
    board_build.flash_mode: dio
  on_boot:
    priority: 600
    then:
      - display.page.show: loading_page

esp32:
  board: esp32s3box
  flash_size: 16MB
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_AUDIO_BOARD_CUSTOM: "y"
      CONFIG_ESP32_S3_BOX_3_BOARD: "y"
    components:
      - name: esp32_s3_box_3_board
        source: github://jesserockz/esp32-s3-box-3-board@main
        refresh: 0s

psram:
  mode: octal
  speed: 80MHz

external_components:
  - source: github://pr#5230
    components: esp_adf
    refresh: 0s


api:
  on_client_connected:
    - lambda: |-
        id(api_connection) = true;
    - display.page.show: idle_page

  on_client_disconnected:
    - lambda: |-
        id(api_connection) = false;

ota:
logger:
  hardware_uart: USB_SERIAL_JTAG

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  ap:
  on_connect:
    - lambda: |-
        id(wifi_connection) = true;
  on_disconnect:
    - lambda: |-
        id(wifi_connection) = false;
time:
  - platform: homeassistant
    id: ha_time

button:
  - platform: restart
    id: reboot
    name: "Reboot"

switch:
  - platform: template
    name: Mute
    id: mute_switch
    optimistic: True
    on_turn_on:
      - voice_assistant.stop: 
      - micro_wake_word.stop 
      - lambda: id(va).set_use_wake_word(false);
      - lambda: |-
          id(mute_value) = false;
    on_turn_off:
      - lambda: |-
          id(mute_value) = true;
      - if:
          condition:
            lambda: return id(wake_word_engine_location).state == "In Home Assistant";
          then:
            - lambda: id(va).set_use_wake_word(true);
            - voice_assistant.start_continuous: 

          else:
            - micro_wake_word.start       

output:
  - platform: ledc
    pin: GPIO47
    id: backlight_output

light:
  - platform: monochromatic
    id: led
    name: LCD Backlight
    entity_category: config
    output: backlight_output
    restore_mode: RESTORE_DEFAULT_ON
    default_transition_length: 250ms

esp_adf:
  board: esp32s3box3

microphone:
  - platform: esp_adf
    id: box_mic

speaker:
  - platform: esp_adf
    id: box_speaker

micro_wake_word:
  model: ${micro_wake_word_model}
  on_wake_word_detected:
    - voice_assistant.start:
        wake_word: !lambda return wake_word;

voice_assistant:
  id: va
  microphone: box_mic
  speaker: box_speaker
  use_wake_word: true
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 4.0
  vad_threshold: 3
  on_listening:
    - display.page.show: listening_page
  on_stt_vad_end: 
    - display.page.show: thinking_page
  on_tts_start: 
    - display.page.show: replying_page
  on_end:
    - display.page.show: idle_page
  on_client_connected:
    - if:
        condition:
          lambda: return id(wake_word_engine_location).state == "In Home Assistant";
        then:
          - lambda: id(va).set_use_wake_word(true);
          - delay: 50ms
          - voice_assistant.start_continuous: 
        else:
          - micro_wake_word.start    

select:
  - platform: template
    entity_category: config
    name: Wake word engine location
    id: wake_word_engine_location
    optimistic: true
    restore_value: true
    options:
      - In Home Assistant
      - On device
    initial_option: On device
    on_value:
      - if:
          condition:
            lambda: return x == "In Home Assistant";
          then:
            - micro_wake_word.stop
            - delay: 500ms
            - lambda: id(va).set_use_wake_word(true);
            - voice_assistant.start_continuous:
      - if:
          condition:
            lambda: return x == "On device";
          then:
            - lambda: id(va).set_use_wake_word(false);
            - voice_assistant.stop
            - delay: 500ms
            - micro_wake_word.start

globals:
  - id: wifi_connection
    type: bool
    restore_value: no
    initial_value: "false"
  - id: api_connection
    type: bool
    restore_value: no
    initial_value: "false" 
  - id: mute_value
    type: bool
    restore_value: no
    initial_value: "false" 

image:
  - file: images/error_320_240.png
    id: error_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/idle_320_240.png
    id: idle_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/listening_320_240.png
    id: listening_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/thinking_320_240.png
    id: thinking_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/replying_320_240.png
    id: replying_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/loading.png
    id: loading_img
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/error-no-wifi.png
    id: error_no_wifi
    resize: 320x240
    type: RGB24
    use_transparency: true
  - file: images/error-no-ha.png
    id: error_no_ha
    resize: 320x240
    type: RGB24
    use_transparency: true

sensor:
  - platform: aht10 #comment out lines 260 - 268 when fixing 'no voice' as per instructions on line 640
    i2c_id: bus_b
    variant: AHT20
    temperature:
      name: "Temperature"
      id: s3temp
    humidity:
      name: "Humidity"
    update_interval: 60s


  - platform: adc
    pin: GPIO10
    name: "Battery voltage"
    id: battery_voltage
    unit_of_measurement: "V"
    accuracy_decimals: 1
    device_class: "voltage"
    entity_category: "diagnostic"
    disabled_by_default: true
    update_interval: 30s
    attenuation: auto
    filters:
        - multiply: 4.11

  - platform: copy
    id: battery_percent
    source_id: battery_voltage
    name: "Battery level"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    device_class: "battery"
    entity_category: "diagnostic"
    filters:
      - lambda: return (x - 2.7) / (4.2 - 2.7) * 100;
      - clamp:
          min_value: 0
          max_value: 100

font:
  - file: "fonts/consola.ttf"
    id: my_font
    size: 14

  - file: "fonts/consola.ttf"
    id: my_font2
    size: 72

  - file: "fonts/consola.ttf"
    id: my_font3
    size: 32

  - file: "fonts/consola.ttf"
    id: my_font4
    size: 40


  - file: "fonts/materialdesignicons-webfont.ttf"
    id: icon_font_55
    size: 45
    glyphs: [
      "\U000F036D",
      "\U000F036C",
      "\U000F0079",#battery 100%
      "\U000F0082",#battery 90%
      "\U000F0081",#battery 80%
      "\U000F0080",#battery 70%
      "\U000F007F",#battery 60%
      "\U000F007E",#battery 50%
      "\U000F007D",#battery 40%
      "\U000F007C",#battery 30%
      "\U000F007B",#battery 20%
      "\U000F007A",#battery 10%
      "\U000F10CD",#battery warning
      "\U000F050F",#temp sensor
      "\U000F024A",#garden/flower
      "\U000F16BD",#wifi connected
      "\U000F16BC",#wifidisconnected
      "\U000F07D0",#api connected
      "\U000F1247",
      "\U000F12A8",#touch button
      "\U000F0EBA",#stats
      "\U000F087B",#api disconnected
      "\U000F0B6C",#car
      "\U000F057E",#speaker on
      "\U000F0581",#speaker off
      "\U000F0493",#settings cog
      "\U000F1C6F",#info
      "\U000F06E8",#light bulb
      "\U000F075A",#music
      ]

  - file: "fonts/materialdesignicons-webfont.ttf"
    id: icon_font_80
    size: 75
    glyphs: [
      "\U000F1322",#tools
      "\U000F12D4",#garage open
      "\U000F12D3",#garage closed
      "\U000F0238",#heating
      "\U000F0B2C",#up
      "\U000F0B26",#down
      "\U000F024A",#garden
      "\U000F1987",#floods
      "\U000F04C8",#spots
      "\U000F1722",#fire off
      "\U000F068A",#alarm unarmed
      "\U000F099D",#alarm armed
      "\U000F1A12",#home button
      "\U000F0D90",#monitor_off
      "\U000F0B28",#left
      "\U000F192D",#electricity
      "\U000F1A1B",#gas
      "\U000F0B6C",#car battery
      "\U000F0873",#car miles non
      "\U000F0875",#car miles low
      "\U000F0874",#car miles full
      "\U000F0B2A",#right
      "\U000F04B9",#living room
      "\U000F1061",#dining
      "\U000F06E8",#light bulb
      "\U000F07F4",#tv
      "\U000F1160",#kitchen
      "\U000F0210",#fan
      "\U000F050F",#temp
      "\U000F01AE",#gbp pound symbol
      "\U000F1747",#tall lamp
      "\U000F0769",#ceiling
      "\U000F075A",#music 
      "\U000F05CB",#voice
      "\U000F0FCE",#scene
      "\U000F040A",#play
      "\U000F03E4",#pause
      "\U000F04DB",#stop
      "\U000F04AD",#next track
      "\U000F04AE",#previous track

      ]

  - file: "fonts/DSEG14Classic-Regular.ttf"    
    id: my_fontseg
    size: 72

  - file: "fonts/DSEG7Classic-Regular.ttf"
    id: my_fontseg2
    size: 72

color:
  - id: green
    hex: '75D15F'
  - id: red
    hex: 'FF3131'
  - id: blue
    hex: '47B7E9'
  - id: blue_drk
    hex: '085296'
  - id: amber
    hex: 'FBAB35'
  - id: lime
    hex: '20FC30'
  - id: pink
    hex: 'D92BBC'
  - id: yellow
    hex: 'FFC000'
  - id: black
    hex: '000000'
  - id: white
    hex: 'ffffff'
  - id: purple
    hex: '73264D'

spi:
  clk_pin: 7
  mosi_pin: 6

display:
  - platform: ili9xxx
    id: s3_box_lcd
    model: S3BOX
    data_rate: 40MHz
    cs_pin: 5
    dc_pin: 4
    reset_pin:
      number: 48
      inverted: true
    update_interval: 250ms
    ##################################################################################################
    ################ The below section defines, what is displayed on the screen,        ##############
    ################ the colours and mdi icons are defined above under FONTS and Color, ##############
    ################ they are then referenced in the config below.                      ##############
    ##################################################################################################
    pages:
      - id: idle_page ##### home page ######
        lambda: |-  
          it.fill(id(black));
          it.printf(15, 5, id(icon_font_55), blue, "%s", id(api_connection) ?  "\U000F07D0" : "\U000F087B");
          it.printf(80, 5, id(icon_font_55), yellow, "%s", id(wifi_connection) ?  "\U000F16BD" : "\U000F16BC");
          if(id(battery_voltage).has_state ()) {
              if(id(battery_voltage).state <= 2.7) {
                  // Replace battery, less than 10% 420, 558 / 87
                  it.printf(135, 5, id(icon_font_55), "\U000F10CD");
              } else if (id(battery_percent).state >= 98) {
                  // "\U000F0079" # mdi-battery
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0079");
              } else if (id(battery_percent).state >= 90) {
                  // "\U000F0082" # mdi-battery-90
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0082");
              } else if (id(battery_percent).state >= 80) {
                  // "\U000F0081" # mdi-battery-80
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0081");
              } else if (id(battery_percent).state >= 70) {
                  // "\U000F0080" # mdi-battery-70
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0080");
              } else if (id(battery_percent).state >= 60) {
                  // "\U000F007F" # mdi-battery-60
                  it.printf(135, 5, id(icon_font_55), green, "\U000F007F");
              } else if (id(battery_percent).state >= 50) {
                  // "\U000F007E" # mdi-battery-50
                  it.printf(135, 5, id(icon_font_55), amber, "\U000F007E");
              } else if (id(battery_percent).state >= 40) {
                  // "\U000F007D" # mdi-battery-40
                  it.printf(135, 5, id(icon_font_55), amber, "\U000F007D");
              } else if (id(battery_percent).state >= 30) {
                  // "\U000F007C" # mdi-battery-30
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007C");
              } else if (id(battery_percent).state >= 20) {
                  // "\U000F007B" # mdi-battery-20
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007B");
              } else if (id(battery_percent).state >= 10) {
                  // "\U000F007A" # mdi-battery-10
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007A");
              }
          }


          if(id(mute_switch).state) {
                 it.printf(190, 5, id(icon_font_55), red, "\U000F0581"); 
          } else {
                 it.printf(190, 5, id(icon_font_55), lime, "\U000F057E"); 
          }



          it.printf(250, 5, id(icon_font_55), pink, "\U000F1C6F");
          it.printf(20, 75, id(icon_font_80), blue,"\U000F050F");
          it.printf(40, 120, id(my_font3), white, "%.f", id(s3temp).state);

          it.printf(120, 75, id(icon_font_80), yellow,"\U000F06E8");
          it.printf(220, 75, id(icon_font_80), purple,"\U000F0210");


          it.printf(20, 155, id(icon_font_80), red,"\U000F075A");
          it.printf(120, 155, id(icon_font_80), blue,"\U000F0FCE");
          it.printf(220, 155, id(icon_font_80), lime,"\U000F05CB");




      - id: test_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Test ok");

      - id: info_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Info Page");

      - id: climate_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Climate Page");

      - id: lights_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Lights Page");

      - id: media_page
        lambda: |-  
          it.fill(id(black));
          it.printf(15, 5, id(icon_font_55), blue, "%s", id(api_connection) ?  "\U000F07D0" : "\U000F087B");
          it.printf(80, 5, id(icon_font_55), yellow, "%s", id(wifi_connection) ?  "\U000F16BD" : "\U000F16BC");
          if(id(battery_voltage).has_state ()) {
              if(id(battery_voltage).state <= 2.7) {
                  // Replace battery, less than 10% 420, 558 / 87
                  it.printf(135, 5, id(icon_font_55), "\U000F10CD");
              } else if (id(battery_percent).state >= 98) {
                  // "\U000F0079" # mdi-battery
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0079");
              } else if (id(battery_percent).state >= 90) {
                  // "\U000F0082" # mdi-battery-90
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0082");
              } else if (id(battery_percent).state >= 80) {
                  // "\U000F0081" # mdi-battery-80
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0081");
              } else if (id(battery_percent).state >= 70) {
                  // "\U000F0080" # mdi-battery-70
                  it.printf(135, 5, id(icon_font_55), green, "\U000F0080");
              } else if (id(battery_percent).state >= 60) {
                  // "\U000F007F" # mdi-battery-60
                  it.printf(135, 5, id(icon_font_55), green, "\U000F007F");
              } else if (id(battery_percent).state >= 50) {
                  // "\U000F007E" # mdi-battery-50
                  it.printf(135, 5, id(icon_font_55), amber, "\U000F007E");
              } else if (id(battery_percent).state >= 40) {
                  // "\U000F007D" # mdi-battery-40
                  it.printf(135, 5, id(icon_font_55), amber, "\U000F007D");
              } else if (id(battery_percent).state >= 30) {
                  // "\U000F007C" # mdi-battery-30
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007C");
              } else if (id(battery_percent).state >= 20) {
                  // "\U000F007B" # mdi-battery-20
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007B");
              } else if (id(battery_percent).state >= 10) {
                  // "\U000F007A" # mdi-battery-10
                  it.printf(135, 5, id(icon_font_55), red, "\U000F007A");
              }
          }


          if(id(mute_switch).state) {
                 it.printf(190, 5, id(icon_font_55), red, "\U000F0581"); 
          } else {
                 it.printf(190, 5, id(icon_font_55), lime, "\U000F057E"); 
          }
          if(id(mute_switch).state) {
                 it.printf(190, 5, id(icon_font_55), red, "\U000F0581"); 
          } else {
                 it.printf(190, 5, id(icon_font_55), lime, "\U000F057E"); 
          }

          it.printf(250, 5, id(icon_font_55), pink, "\U000F1C6F");


          it.printf(20, 75, id(icon_font_80), blue,"\U000F04AE");
          it.printf(120, 75, id(icon_font_80), blue,"\U000F040A");
          it.printf(220, 75, id(icon_font_80), blue,"\U000F04AD");


          it.printf(20, 155, id(icon_font_80), white,"\U000F03E4");
          //it.printf(120, 155, id(icon_font_80), blue,"\U000F04DB");
          it.printf(220, 155, id(icon_font_80), white,"\U000F04DB");



      - id: scenes_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Scenes Page");

      - id: loading_page
        lambda: |-
          it.fill(Color::BLACK);
          it.image((it.get_width() / 2), (it.get_height() / 2), id(loading_img), ImageAlign::CENTER);

      - id: listening_page
        lambda: |-
          it.fill(Color::BLACK);
          it.image((it.get_width() / 2), (it.get_height() / 2), id(listening_img), ImageAlign::CENTER);
      
      - id: thinking_page
        lambda: |-
          it.fill(Color::BLACK);
          it.image((it.get_width() / 2), (it.get_height() / 2), id(thinking_img), ImageAlign::CENTER);
          
      - id: replying_page
        lambda: |-
          it.fill(Color::BLACK);
          it.image((it.get_width() / 2), (it.get_height() / 2), id(replying_img), ImageAlign::CENTER);
      - id: error_page
        lambda: |-
          it.fill(Color::BLACK);
          it.image((it.get_width() / 2), (it.get_height() / 2), id(error_img), ImageAlign::CENTER);
      - id: muted_page
        lambda: |-
          it.fill(Color::BLACK);
          it.printf(160, 120, id(my_font4), yellow, TextAlign::CENTER, "Mic & Speaker - Muted");


##########################################################################################################################
####   in order to get Voice to respond after initial install, you need to comment out everything below               ####
####   these instructions to the end of the config.                                                                   ####
####   highlight all text below then on your keyboard press ctrl + /  this will comment everything with #'s           ####
####   you also need to comment out the line number 505 (above) this needs to be done using // (2 forward slashes)    ####
####   like so //it.printf(40, 120, id(my_font3), white, "%.f", id(s3temp).state);                                    ####
####   lastly you need to comment the AHT sensor block at line 260.                                                   #### 
####   Once everything is commented out. save the config exit the editor and click 'clean build files' from the       ####
####   the device card 3 dot menu. Install the config and test voice works.                                           #### 
####   if voice is working , then uncomment everything above, save and exit the editor do another 'clean build files' ####
####   and install.                                                                                                   ####
####   once installed, test voice and touch. if touch isn't functioning, reboot the device using the software         ####
####   'reboot button from the HA ESPHome integration entry for the device.'                                          ####                    
##########################################################################################################################
i2c:
  - id: bus_a
    sda: GPIO08
    scl: GPIO18
    scan: false
    sda_pullup_enabled: true
    scl_pullup_enabled: true
    frequency: 100kHz

  - sda: GPIO41
    scl: GPIO40
    scan: false
    sda_pullup_enabled: true
    scl_pullup_enabled: true
    frequency: 50kHz
    id: bus_b

touchscreen:
  platform: gt911
  i2c_id: bus_a
  id: gt911_touchscreen
  interrupt_pin: GPIO3

###### top left hand physical button #######
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: Top Left Button
    entity_category: diagnostic
    on_press:
      - light.toggle: led

 ########## Top status bar buttons 1-5 ##########
  - platform: touchscreen
    id: status_bar_1
    x_min: 5
    x_max: 60
    y_min: 0
    y_max: 55
    on_click:
      min_length: 0ms
      max_length: 500ms
      then:
        - display.page.show: test_page

  - platform: touchscreen
    id: status_bar_2
    internal: true
    x_min: 65
    x_max: 125
    y_min: 0
    y_max: 55
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: test_page


  - platform: touchscreen
    id: status_bar_3
    internal: true
    x_min: 130
    x_max: 185
    y_min: 0
    y_max: 55
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: test_page

  - platform: touchscreen
    id: status_bar_4
    internal: true
    x_min: 190
    x_max: 245
    y_min: 0
    y_max: 55
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - switch.toggle: mute_switch

  - platform: touchscreen
    name: status_bar_5
    internal: true
    x_min: 250
    x_max: 305
    y_min: 0
    y_max: 55
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: info_page

#########################################
########## control buttons 1 -6 ########
  - platform: touchscreen
    page_id: idle_page
    id: control_1
    internal: true
    x_min: 5
    x_max: 105
    y_min: 90
    y_max: 170
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: climate_page

  - platform: touchscreen
    page_id: idle_page
    id: control_2
    internal: true
    x_min: 110
    x_max: 210
    y_min: 90
    y_max: 170
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: lights_page

  - platform: touchscreen
    page_id: idle_page
    id: control_3
    internal: true
    x_min: 215
    x_max: 315
    y_min: 90
    y_max: 170
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: test_page

  - platform: touchscreen
    page_id: idle_page
    id: control_4
    internal: true
    x_min: 5
    x_max: 105
    y_min: 175
    y_max: 240
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: media_page

  - platform: touchscreen
    page_id: idle_page
    id: control_5
    internal: true
    x_min: 110
    x_max: 210
    y_min: 175
    y_max: 240
    on_click:
      min_length: 10ms
      max_length: 500ms
      then:
        - display.page.show: scenes_page

  - platform: touchscreen
    page_id: idle_page
    id: control_6 
    internal: true
    x_min: 215
    x_max: 315
    y_min: 175
    y_max: 240
    on_press:
      then:
        - micro_wake_word.stop
        - lambda: id(va).set_use_wake_word(false);
        - display.page.show: listening_page
        - delay: 100ms
        - voice_assistant.start
    on_release:
      - if:
          condition:
            lambda: return id(wake_word_engine_location).state == "In Home Assistant";
          then:
            - lambda: id(va).set_use_wake_word(true);
            - delay: 50ms
            - voice_assistant.start_continuous: 
          else:
            - micro_wake_word.start         
########### end of control buttons #######################
########### media page controls    #######################
  - platform: touchscreen
    page_id: media_page
    id: previous
    internal: true
    x_min: 5
    x_max: 105
    y_min: 90
    y_max: 170
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms


  - platform: touchscreen
    page_id: media_page
    id: play
    internal: true
    x_min: 110
    x_max: 210
    y_min: 90
    y_max: 170
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms


  - platform: touchscreen
    page_id: media_page
    id: next
    internal: true
    x_min: 215
    x_max: 315
    y_min: 90
    y_max: 170
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms

  - platform: touchscreen
    page_id: media_page
    id: pause_butt
    internal: true
    x_min: 5
    x_max: 105
    y_min: 175
    y_max: 240
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms


  - platform: touchscreen
    page_id: media_page
    id: media_not_used
    internal: true
    x_min: 110
    x_max: 210
    y_min: 175
    y_max: 240
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms



  - platform: touchscreen
    page_id: media_page
    id: stop_butt 
    internal: true
    x_min: 215
    x_max: 315
    y_min: 175
    y_max: 240
    # on_click:
    #   min_length: 10ms
    #   max_length: 500ms




#######     red circle home button   #####################
  - platform: gt911
    name: "Home"
    index: 0
    on_press:
      - display.page.show: idle_page
###### radar sensor ########
  - platform: gpio
    pin:
      number: GPIO21
    name: "Presence detect"
    disabled_by_default: false
    device_class: "occupancy"

################## config end ############################